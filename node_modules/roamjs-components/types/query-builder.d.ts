declare type QBBase = {
    uid: string;
};
export declare type QBClauseData = {
    relation: string;
    source: string;
    target: string;
    not?: boolean;
} & QBBase;
export declare type QBNestedData = {
    conditions: Condition[][];
} & QBBase;
export declare type QBClause = QBClauseData & {
    type: "clause";
};
export declare type QBNot = QBClauseData & {
    type: "not";
};
export declare type QBOr = QBNestedData & {
    type: "or";
};
export declare type QBNor = QBNestedData & {
    type: "not or";
};
export declare type Condition = QBClause | QBNot | QBOr | QBNor;
export declare type Selection = {
    text: string;
    label: string;
    uid: string;
};
export declare type Result = {
    text: string;
    uid: string;
} & Record<string, string | number | Date>;
export declare type ExportTypes = {
    name: string;
    callback: (args: {
        filename: string;
        graph: string;
    }) => Promise<{
        title: string;
        content: string;
    }[]>;
}[];
export {};

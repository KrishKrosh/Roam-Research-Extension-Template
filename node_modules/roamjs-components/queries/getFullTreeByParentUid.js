"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const formatRoamNode = (n, v) => ({
    text: n.string || n.title || "",
    open: typeof n.open === "undefined" ? true : n.open,
    order: n.order || 0,
    uid: n.uid || "",
    heading: n.heading || 0,
    viewType: n.viewType || v,
    editTime: new Date(n.editTime || 0),
    props: { imageResize: {}, iframe: {} },
    textAlign: n.textAlign || "left",
    children: (n.children || [])
        .sort(({ order: a }, { order: b }) => a - b)
        .map((r) => formatRoamNode(r, n.viewType || v)),
});
const getFullTreeByParentUid = (uid) => {
    var _a, _b;
    return formatRoamNode(((_b = (_a = window.roamAlphaAPI.q(`[:find (pull ?b [
      :block/string 
      :node/title 
      :block/uid 
      :block/order 
      :block/heading 
      :block/open 
      [:children/view-type :as "viewType"] 
      [:block/text-align :as "textAlign"] 
      [:edit/time :as "editTime"] 
      :block/props 
      {:block/children ...}
    ]) :where [?b :block/uid "${uid}"]]`)) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b[0]) || {}, window.roamAlphaAPI
        .q(`[:find
      (pull ?p [:children/view-type]) :where
      [?c :block/uid "${uid}"] [?c :block/parents ?p]]`)
        .reverse()
        .map((a) => a[0])
        .map((a) => a && a["view-type"])
        .find((a) => !!a) || "bullet");
};
exports.default = getFullTreeByParentUid;
//# sourceMappingURL=getFullTreeByParentUid.js.map
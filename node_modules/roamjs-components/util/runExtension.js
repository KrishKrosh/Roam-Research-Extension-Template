"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const axios_1 = tslib_1.__importDefault(require("axios"));
const addStyle_1 = tslib_1.__importDefault(require("../dom/addStyle"));
const runExtension = (args, 
// @deprecated both args
_run = Promise.resolve, options = {}) => {
    const extensionId = typeof args === "string" ? args : args.extensionId;
    const run = typeof args === "string" ? _run : args.run;
    const roamMarketplace = typeof args === "string"
        ? false
        : args.roamMarketplace || process.env.ROAM_MARKETPLACE === "true";
    const skipAnalytics = typeof args === "string" ? options.skipAnalytics : args.skipAnalytics;
    const unload = typeof args === "string" ? () => Promise.resolve : args.unload;
    const onload = () => {
        var _a, _b, _c, _d, _e, _f, _g;
        if ((_c = (_b = (_a = window.roamjs) === null || _a === void 0 ? void 0 : _a.loaded) === null || _b === void 0 ? void 0 : _b.has) === null || _c === void 0 ? void 0 : _c.call(_b, extensionId)) {
            return;
        }
        window.roamjs = {
            loaded: ((_d = window.roamjs) === null || _d === void 0 ? void 0 : _d.loaded) || new Set(),
            extension: ((_e = window.roamjs) === null || _e === void 0 ? void 0 : _e.extension) || {},
            version: ((_f = window.roamjs) === null || _f === void 0 ? void 0 : _f.version) || {},
            dynamicElements: ((_g = window.roamjs) === null || _g === void 0 ? void 0 : _g.dynamicElements) || new Set(),
        };
        window.roamjs.loaded.add(extensionId);
        window.roamjs.version[extensionId] =
            process.env.ROAMJS_VERSION || process.env.NODE_ENV || "";
        if (!skipAnalytics) {
            axios_1.default.post(`https://lambda.roamjs.com/mixpanel`, {
                eventName: "Load Extension",
                properties: { extensionId },
            });
        }
        (0, addStyle_1.default)(`.bp3-button:focus {
    outline-width: 2px;
  }`, "roamjs-default");
        const result = run === null || run === void 0 ? void 0 : run();
        const dispatch = () => {
            document.body.dispatchEvent(new Event(`roamjs:${extensionId}:loaded`));
        };
        if (result) {
            result.then(dispatch);
        }
        else {
            dispatch();
        }
    };
    const onunload = () => {
        unload === null || unload === void 0 ? void 0 : unload();
    };
    if (roamMarketplace) {
        return {
            onload,
            onunload,
        };
    }
    else {
        return onload();
    }
};
exports.default = runExtension;
//# sourceMappingURL=runExtension.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.render = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const core_1 = require("@blueprintjs/core");
const markdown_to_jsx_1 = tslib_1.__importDefault(require("markdown-to-jsx"));
const render = (_a) => {
    var { position = "top" } = _a, props = tslib_1.__rest(_a, ["position"]);
    const className = `roamjs-toast-${position}`;
    const toasterRoot = document.querySelector(`.bp3-toast-container.${className}`);
    if (toasterRoot) {
        toasterRoot.dispatchEvent(new CustomEvent("roamjs-toast", { detail: props }));
        return () => toasterRoot.remove();
    }
    else {
        const toaster = core_1.Toaster.create({
            position,
            className,
        });
        toaster.show({
            message: react_1.default.createElement(markdown_to_jsx_1.default, null, props.content || "RoamJS Notification"),
            intent: props.intent || core_1.Intent.PRIMARY,
            timeout: props.timeout || 5000,
        }, props.id);
        setTimeout(() => {
            const toasterRoot = document.querySelector(`.bp3-toast-container.${className}`);
            if (toasterRoot)
                toasterRoot.addEventListener("roamjs-toast", ((e) => {
                    const props = e.detail;
                    toaster.show({
                        message: (react_1.default.createElement(markdown_to_jsx_1.default, null, props.content || "RoamJS Notification")),
                        intent: props.intent || core_1.Intent.PRIMARY,
                        timeout: props.timeout || 5000,
                    }, props.id);
                }));
        }, 1);
        return () => toaster.dismiss(props.id);
    }
};
exports.render = render;
exports.default = exports.render;
//# sourceMappingURL=Toast.js.map
import { Panel, PanelProps } from "@blueprintjs/core";
import { AxiosResponse } from "axios";
import React from "react";
import type { RoamBasicNode, TreeNode } from "../types";
declare global {
    interface Window {
        [key: `roamjs${string}Token`]: string;
    }
}
export declare const SERVICE_GUIDE_HIGHLIGHT = "3px dashed yellowgreen";
export declare const isFieldInTree: (field?: string) => (tree: RoamBasicNode[]) => boolean;
export declare const useIsFieldSet: (field: string) => boolean;
export declare const useField: (field: string) => string;
export declare const useFieldVals: (field: string) => string[];
export declare const useAuthenticatedAxiosGet: () => (path: string) => Promise<AxiosResponse>;
export declare const useAuthenticatedAxiosPost: () => (path: string, data?: Record<string, unknown> | undefined) => Promise<AxiosResponse>;
export declare const useAuthenticatedAxiosPut: () => (path: string, data?: Record<string, unknown> | undefined) => Promise<AxiosResponse>;
export declare const useAuthenticatedAxiosDelete: () => (path: string) => Promise<AxiosResponse>;
export declare const runService: ({ id, Dashboard, }: {
    id: string;
    Dashboard: React.FC;
}) => void;
export declare type StageProps = PanelProps<object>;
export declare type StageContent = (props: StageProps) => React.ReactElement;
declare type StageConfig = {
    component: StageContent;
    check?: (tree: RoamBasicNode[], service: string) => boolean;
    setting?: string;
    isMain?: boolean;
};
export declare const usePageUid: () => string;
export declare const useSetMetadata: (k: string) => (v: unknown) => void;
export declare const useGetMetadata: (k: string) => unknown;
export declare const useNextStage: (openPanel: (panel: Panel<object>) => void) => (() => void);
export declare const NextButton: ({ disabled, onClick, }: {
    disabled?: boolean | undefined;
    onClick: () => void;
}) => React.ReactElement;
export declare const TOKEN_STAGE: {
    readonly check: (_: TreeNode[], service: string) => boolean;
    readonly component: StageContent;
    readonly setting: "Token";
};
export declare const MainStage: (Content: StageContent) => StageConfig;
export declare const ServiceDashboard: React.FC<{
    service: string;
    stages: StageConfig[];
}>;
export {};

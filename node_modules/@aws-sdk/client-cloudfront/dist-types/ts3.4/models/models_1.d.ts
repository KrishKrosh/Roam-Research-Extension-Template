import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { CloudFrontServiceException as __BaseException } from "./CloudFrontServiceException";
import { Aliases, AliasICPRecordal, CacheBehaviors, CachePolicy, CachePolicyConfig, CachePolicyList, CachePolicyType, CloudFrontOriginAccessIdentity, CloudFrontOriginAccessIdentityConfig, ContentTypeProfileConfig, CustomErrorResponses, DefaultCacheBehavior, Distribution, DistributionConfig, EncryptionEntities, EndPoint, FieldLevelEncryption, FieldLevelEncryptionConfig, FieldLevelEncryptionProfile, FieldLevelEncryptionProfileConfig, FunctionConfig, FunctionStage, FunctionSummary, HttpVersion, Invalidation, KeyGroup, KeyGroupConfig, MonitoringSubscription, OriginGroups, OriginRequestPolicy, OriginRequestPolicyConfig, Origins, PriceClass, PublicKey, PublicKeyConfig, QueryArgProfileConfig, RealtimeLogConfig, ResponseHeadersPolicy, ResponseHeadersPolicyConfig, Restrictions, S3Origin, StreamingDistribution, StreamingDistributionConfig, Tags, TrustedSigners, ViewerCertificate } from "./models_0";

export declare class ResourceInUse extends __BaseException {
    readonly name: "ResourceInUse";
    readonly $fault: "client";
    Message?: string;
    
    constructor(opts: __ExceptionOptionType<ResourceInUse, __BaseException>);
}
export interface DeleteMonitoringSubscriptionRequest {
    
    DistributionId: string | undefined;
}
export declare namespace DeleteMonitoringSubscriptionRequest {
    
    const filterSensitiveLog: (obj: DeleteMonitoringSubscriptionRequest) => any;
}
export interface DeleteMonitoringSubscriptionResult {
}
export declare namespace DeleteMonitoringSubscriptionResult {
    
    const filterSensitiveLog: (obj: DeleteMonitoringSubscriptionResult) => any;
}
export interface DeleteOriginRequestPolicyRequest {
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace DeleteOriginRequestPolicyRequest {
    
    const filterSensitiveLog: (obj: DeleteOriginRequestPolicyRequest) => any;
}

export declare class OriginRequestPolicyInUse extends __BaseException {
    readonly name: "OriginRequestPolicyInUse";
    readonly $fault: "client";
    Message?: string;
    
    constructor(opts: __ExceptionOptionType<OriginRequestPolicyInUse, __BaseException>);
}
export interface DeletePublicKeyRequest {
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace DeletePublicKeyRequest {
    
    const filterSensitiveLog: (obj: DeletePublicKeyRequest) => any;
}

export declare class PublicKeyInUse extends __BaseException {
    readonly name: "PublicKeyInUse";
    readonly $fault: "client";
    Message?: string;
    
    constructor(opts: __ExceptionOptionType<PublicKeyInUse, __BaseException>);
}
export interface DeleteRealtimeLogConfigRequest {
    
    Name?: string;
    
    ARN?: string;
}
export declare namespace DeleteRealtimeLogConfigRequest {
    
    const filterSensitiveLog: (obj: DeleteRealtimeLogConfigRequest) => any;
}

export declare class RealtimeLogConfigInUse extends __BaseException {
    readonly name: "RealtimeLogConfigInUse";
    readonly $fault: "client";
    Message?: string;
    
    constructor(opts: __ExceptionOptionType<RealtimeLogConfigInUse, __BaseException>);
}
export interface DeleteResponseHeadersPolicyRequest {
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace DeleteResponseHeadersPolicyRequest {
    
    const filterSensitiveLog: (obj: DeleteResponseHeadersPolicyRequest) => any;
}

export declare class ResponseHeadersPolicyInUse extends __BaseException {
    readonly name: "ResponseHeadersPolicyInUse";
    readonly $fault: "client";
    Message?: string;
    
    constructor(opts: __ExceptionOptionType<ResponseHeadersPolicyInUse, __BaseException>);
}

export interface DeleteStreamingDistributionRequest {
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace DeleteStreamingDistributionRequest {
    
    const filterSensitiveLog: (obj: DeleteStreamingDistributionRequest) => any;
}

export declare class NoSuchStreamingDistribution extends __BaseException {
    readonly name: "NoSuchStreamingDistribution";
    readonly $fault: "client";
    Message?: string;
    
    constructor(opts: __ExceptionOptionType<NoSuchStreamingDistribution, __BaseException>);
}

export declare class StreamingDistributionNotDisabled extends __BaseException {
    readonly name: "StreamingDistributionNotDisabled";
    readonly $fault: "client";
    Message?: string;
    
    constructor(opts: __ExceptionOptionType<StreamingDistributionNotDisabled, __BaseException>);
}
export interface DescribeFunctionRequest {
    
    Name: string | undefined;
    
    Stage?: FunctionStage | string;
}
export declare namespace DescribeFunctionRequest {
    
    const filterSensitiveLog: (obj: DescribeFunctionRequest) => any;
}
export interface DescribeFunctionResult {
    
    FunctionSummary?: FunctionSummary;
    
    ETag?: string;
}
export declare namespace DescribeFunctionResult {
    
    const filterSensitiveLog: (obj: DescribeFunctionResult) => any;
}
export interface GetCachePolicyRequest {
    
    Id: string | undefined;
}
export declare namespace GetCachePolicyRequest {
    
    const filterSensitiveLog: (obj: GetCachePolicyRequest) => any;
}
export interface GetCachePolicyResult {
    
    CachePolicy?: CachePolicy;
    
    ETag?: string;
}
export declare namespace GetCachePolicyResult {
    
    const filterSensitiveLog: (obj: GetCachePolicyResult) => any;
}
export interface GetCachePolicyConfigRequest {
    
    Id: string | undefined;
}
export declare namespace GetCachePolicyConfigRequest {
    
    const filterSensitiveLog: (obj: GetCachePolicyConfigRequest) => any;
}
export interface GetCachePolicyConfigResult {
    
    CachePolicyConfig?: CachePolicyConfig;
    
    ETag?: string;
}
export declare namespace GetCachePolicyConfigResult {
    
    const filterSensitiveLog: (obj: GetCachePolicyConfigResult) => any;
}

export interface GetCloudFrontOriginAccessIdentityRequest {
    
    Id: string | undefined;
}
export declare namespace GetCloudFrontOriginAccessIdentityRequest {
    
    const filterSensitiveLog: (obj: GetCloudFrontOriginAccessIdentityRequest) => any;
}

export interface GetCloudFrontOriginAccessIdentityResult {
    
    CloudFrontOriginAccessIdentity?: CloudFrontOriginAccessIdentity;
    
    ETag?: string;
}
export declare namespace GetCloudFrontOriginAccessIdentityResult {
    
    const filterSensitiveLog: (obj: GetCloudFrontOriginAccessIdentityResult) => any;
}

export interface GetCloudFrontOriginAccessIdentityConfigRequest {
    
    Id: string | undefined;
}
export declare namespace GetCloudFrontOriginAccessIdentityConfigRequest {
    
    const filterSensitiveLog: (obj: GetCloudFrontOriginAccessIdentityConfigRequest) => any;
}

export interface GetCloudFrontOriginAccessIdentityConfigResult {
    
    CloudFrontOriginAccessIdentityConfig?: CloudFrontOriginAccessIdentityConfig;
    
    ETag?: string;
}
export declare namespace GetCloudFrontOriginAccessIdentityConfigResult {
    
    const filterSensitiveLog: (obj: GetCloudFrontOriginAccessIdentityConfigResult) => any;
}

export interface GetDistributionRequest {
    
    Id: string | undefined;
}
export declare namespace GetDistributionRequest {
    
    const filterSensitiveLog: (obj: GetDistributionRequest) => any;
}

export interface GetDistributionResult {
    
    Distribution?: Distribution;
    
    ETag?: string;
}
export declare namespace GetDistributionResult {
    
    const filterSensitiveLog: (obj: GetDistributionResult) => any;
}

export interface GetDistributionConfigRequest {
    
    Id: string | undefined;
}
export declare namespace GetDistributionConfigRequest {
    
    const filterSensitiveLog: (obj: GetDistributionConfigRequest) => any;
}

export interface GetDistributionConfigResult {
    
    DistributionConfig?: DistributionConfig;
    
    ETag?: string;
}
export declare namespace GetDistributionConfigResult {
    
    const filterSensitiveLog: (obj: GetDistributionConfigResult) => any;
}
export interface GetFieldLevelEncryptionRequest {
    
    Id: string | undefined;
}
export declare namespace GetFieldLevelEncryptionRequest {
    
    const filterSensitiveLog: (obj: GetFieldLevelEncryptionRequest) => any;
}
export interface GetFieldLevelEncryptionResult {
    
    FieldLevelEncryption?: FieldLevelEncryption;
    
    ETag?: string;
}
export declare namespace GetFieldLevelEncryptionResult {
    
    const filterSensitiveLog: (obj: GetFieldLevelEncryptionResult) => any;
}
export interface GetFieldLevelEncryptionConfigRequest {
    
    Id: string | undefined;
}
export declare namespace GetFieldLevelEncryptionConfigRequest {
    
    const filterSensitiveLog: (obj: GetFieldLevelEncryptionConfigRequest) => any;
}
export interface GetFieldLevelEncryptionConfigResult {
    
    FieldLevelEncryptionConfig?: FieldLevelEncryptionConfig;
    
    ETag?: string;
}
export declare namespace GetFieldLevelEncryptionConfigResult {
    
    const filterSensitiveLog: (obj: GetFieldLevelEncryptionConfigResult) => any;
}
export interface GetFieldLevelEncryptionProfileRequest {
    
    Id: string | undefined;
}
export declare namespace GetFieldLevelEncryptionProfileRequest {
    
    const filterSensitiveLog: (obj: GetFieldLevelEncryptionProfileRequest) => any;
}
export interface GetFieldLevelEncryptionProfileResult {
    
    FieldLevelEncryptionProfile?: FieldLevelEncryptionProfile;
    
    ETag?: string;
}
export declare namespace GetFieldLevelEncryptionProfileResult {
    
    const filterSensitiveLog: (obj: GetFieldLevelEncryptionProfileResult) => any;
}
export interface GetFieldLevelEncryptionProfileConfigRequest {
    
    Id: string | undefined;
}
export declare namespace GetFieldLevelEncryptionProfileConfigRequest {
    
    const filterSensitiveLog: (obj: GetFieldLevelEncryptionProfileConfigRequest) => any;
}
export interface GetFieldLevelEncryptionProfileConfigResult {
    
    FieldLevelEncryptionProfileConfig?: FieldLevelEncryptionProfileConfig;
    
    ETag?: string;
}
export declare namespace GetFieldLevelEncryptionProfileConfigResult {
    
    const filterSensitiveLog: (obj: GetFieldLevelEncryptionProfileConfigResult) => any;
}
export interface GetFunctionRequest {
    
    Name: string | undefined;
    
    Stage?: FunctionStage | string;
}
export declare namespace GetFunctionRequest {
    
    const filterSensitiveLog: (obj: GetFunctionRequest) => any;
}
export interface GetFunctionResult {
    
    FunctionCode?: Uint8Array;
    
    ETag?: string;
    
    ContentType?: string;
}
export declare namespace GetFunctionResult {
    
    const filterSensitiveLog: (obj: GetFunctionResult) => any;
}

export interface GetInvalidationRequest {
    
    DistributionId: string | undefined;
    
    Id: string | undefined;
}
export declare namespace GetInvalidationRequest {
    
    const filterSensitiveLog: (obj: GetInvalidationRequest) => any;
}

export interface GetInvalidationResult {
    
    Invalidation?: Invalidation;
}
export declare namespace GetInvalidationResult {
    
    const filterSensitiveLog: (obj: GetInvalidationResult) => any;
}

export declare class NoSuchInvalidation extends __BaseException {
    readonly name: "NoSuchInvalidation";
    readonly $fault: "client";
    Message?: string;
    
    constructor(opts: __ExceptionOptionType<NoSuchInvalidation, __BaseException>);
}
export interface GetKeyGroupRequest {
    
    Id: string | undefined;
}
export declare namespace GetKeyGroupRequest {
    
    const filterSensitiveLog: (obj: GetKeyGroupRequest) => any;
}
export interface GetKeyGroupResult {
    
    KeyGroup?: KeyGroup;
    
    ETag?: string;
}
export declare namespace GetKeyGroupResult {
    
    const filterSensitiveLog: (obj: GetKeyGroupResult) => any;
}
export interface GetKeyGroupConfigRequest {
    
    Id: string | undefined;
}
export declare namespace GetKeyGroupConfigRequest {
    
    const filterSensitiveLog: (obj: GetKeyGroupConfigRequest) => any;
}
export interface GetKeyGroupConfigResult {
    
    KeyGroupConfig?: KeyGroupConfig;
    
    ETag?: string;
}
export declare namespace GetKeyGroupConfigResult {
    
    const filterSensitiveLog: (obj: GetKeyGroupConfigResult) => any;
}
export interface GetMonitoringSubscriptionRequest {
    
    DistributionId: string | undefined;
}
export declare namespace GetMonitoringSubscriptionRequest {
    
    const filterSensitiveLog: (obj: GetMonitoringSubscriptionRequest) => any;
}
export interface GetMonitoringSubscriptionResult {
    
    MonitoringSubscription?: MonitoringSubscription;
}
export declare namespace GetMonitoringSubscriptionResult {
    
    const filterSensitiveLog: (obj: GetMonitoringSubscriptionResult) => any;
}
export interface GetOriginRequestPolicyRequest {
    
    Id: string | undefined;
}
export declare namespace GetOriginRequestPolicyRequest {
    
    const filterSensitiveLog: (obj: GetOriginRequestPolicyRequest) => any;
}
export interface GetOriginRequestPolicyResult {
    
    OriginRequestPolicy?: OriginRequestPolicy;
    
    ETag?: string;
}
export declare namespace GetOriginRequestPolicyResult {
    
    const filterSensitiveLog: (obj: GetOriginRequestPolicyResult) => any;
}
export interface GetOriginRequestPolicyConfigRequest {
    
    Id: string | undefined;
}
export declare namespace GetOriginRequestPolicyConfigRequest {
    
    const filterSensitiveLog: (obj: GetOriginRequestPolicyConfigRequest) => any;
}
export interface GetOriginRequestPolicyConfigResult {
    
    OriginRequestPolicyConfig?: OriginRequestPolicyConfig;
    
    ETag?: string;
}
export declare namespace GetOriginRequestPolicyConfigResult {
    
    const filterSensitiveLog: (obj: GetOriginRequestPolicyConfigResult) => any;
}
export interface GetPublicKeyRequest {
    
    Id: string | undefined;
}
export declare namespace GetPublicKeyRequest {
    
    const filterSensitiveLog: (obj: GetPublicKeyRequest) => any;
}
export interface GetPublicKeyResult {
    
    PublicKey?: PublicKey;
    
    ETag?: string;
}
export declare namespace GetPublicKeyResult {
    
    const filterSensitiveLog: (obj: GetPublicKeyResult) => any;
}
export interface GetPublicKeyConfigRequest {
    
    Id: string | undefined;
}
export declare namespace GetPublicKeyConfigRequest {
    
    const filterSensitiveLog: (obj: GetPublicKeyConfigRequest) => any;
}
export interface GetPublicKeyConfigResult {
    
    PublicKeyConfig?: PublicKeyConfig;
    
    ETag?: string;
}
export declare namespace GetPublicKeyConfigResult {
    
    const filterSensitiveLog: (obj: GetPublicKeyConfigResult) => any;
}
export interface GetRealtimeLogConfigRequest {
    
    Name?: string;
    
    ARN?: string;
}
export declare namespace GetRealtimeLogConfigRequest {
    
    const filterSensitiveLog: (obj: GetRealtimeLogConfigRequest) => any;
}
export interface GetRealtimeLogConfigResult {
    
    RealtimeLogConfig?: RealtimeLogConfig;
}
export declare namespace GetRealtimeLogConfigResult {
    
    const filterSensitiveLog: (obj: GetRealtimeLogConfigResult) => any;
}
export interface GetResponseHeadersPolicyRequest {
    
    Id: string | undefined;
}
export declare namespace GetResponseHeadersPolicyRequest {
    
    const filterSensitiveLog: (obj: GetResponseHeadersPolicyRequest) => any;
}
export interface GetResponseHeadersPolicyResult {
    
    ResponseHeadersPolicy?: ResponseHeadersPolicy;
    
    ETag?: string;
}
export declare namespace GetResponseHeadersPolicyResult {
    
    const filterSensitiveLog: (obj: GetResponseHeadersPolicyResult) => any;
}
export interface GetResponseHeadersPolicyConfigRequest {
    
    Id: string | undefined;
}
export declare namespace GetResponseHeadersPolicyConfigRequest {
    
    const filterSensitiveLog: (obj: GetResponseHeadersPolicyConfigRequest) => any;
}
export interface GetResponseHeadersPolicyConfigResult {
    
    ResponseHeadersPolicyConfig?: ResponseHeadersPolicyConfig;
    
    ETag?: string;
}
export declare namespace GetResponseHeadersPolicyConfigResult {
    
    const filterSensitiveLog: (obj: GetResponseHeadersPolicyConfigResult) => any;
}

export interface GetStreamingDistributionRequest {
    
    Id: string | undefined;
}
export declare namespace GetStreamingDistributionRequest {
    
    const filterSensitiveLog: (obj: GetStreamingDistributionRequest) => any;
}

export interface GetStreamingDistributionResult {
    
    StreamingDistribution?: StreamingDistribution;
    
    ETag?: string;
}
export declare namespace GetStreamingDistributionResult {
    
    const filterSensitiveLog: (obj: GetStreamingDistributionResult) => any;
}

export interface GetStreamingDistributionConfigRequest {
    
    Id: string | undefined;
}
export declare namespace GetStreamingDistributionConfigRequest {
    
    const filterSensitiveLog: (obj: GetStreamingDistributionConfigRequest) => any;
}

export interface GetStreamingDistributionConfigResult {
    
    StreamingDistributionConfig?: StreamingDistributionConfig;
    
    ETag?: string;
}
export declare namespace GetStreamingDistributionConfigResult {
    
    const filterSensitiveLog: (obj: GetStreamingDistributionConfigResult) => any;
}
export interface ListCachePoliciesRequest {
    
    Type?: CachePolicyType | string;
    
    Marker?: string;
    
    MaxItems?: number;
}
export declare namespace ListCachePoliciesRequest {
    
    const filterSensitiveLog: (obj: ListCachePoliciesRequest) => any;
}
export interface ListCachePoliciesResult {
    
    CachePolicyList?: CachePolicyList;
}
export declare namespace ListCachePoliciesResult {
    
    const filterSensitiveLog: (obj: ListCachePoliciesResult) => any;
}

export interface ListCloudFrontOriginAccessIdentitiesRequest {
    
    Marker?: string;
    
    MaxItems?: number;
}
export declare namespace ListCloudFrontOriginAccessIdentitiesRequest {
    
    const filterSensitiveLog: (obj: ListCloudFrontOriginAccessIdentitiesRequest) => any;
}

export interface CloudFrontOriginAccessIdentitySummary {
    
    Id: string | undefined;
    
    S3CanonicalUserId: string | undefined;
    
    Comment: string | undefined;
}
export declare namespace CloudFrontOriginAccessIdentitySummary {
    
    const filterSensitiveLog: (obj: CloudFrontOriginAccessIdentitySummary) => any;
}

export interface CloudFrontOriginAccessIdentityList {
    
    Marker: string | undefined;
    
    NextMarker?: string;
    
    MaxItems: number | undefined;
    
    IsTruncated: boolean | undefined;
    
    Quantity: number | undefined;
    
    Items?: CloudFrontOriginAccessIdentitySummary[];
}
export declare namespace CloudFrontOriginAccessIdentityList {
    
    const filterSensitiveLog: (obj: CloudFrontOriginAccessIdentityList) => any;
}

export interface ListCloudFrontOriginAccessIdentitiesResult {
    
    CloudFrontOriginAccessIdentityList?: CloudFrontOriginAccessIdentityList;
}
export declare namespace ListCloudFrontOriginAccessIdentitiesResult {
    
    const filterSensitiveLog: (obj: ListCloudFrontOriginAccessIdentitiesResult) => any;
}
export interface ListConflictingAliasesRequest {
    
    DistributionId: string | undefined;
    
    Alias: string | undefined;
    
    Marker?: string;
    
    MaxItems?: number;
}
export declare namespace ListConflictingAliasesRequest {
    
    const filterSensitiveLog: (obj: ListConflictingAliasesRequest) => any;
}

export interface ConflictingAlias {
    
    Alias?: string;
    
    DistributionId?: string;
    
    AccountId?: string;
}
export declare namespace ConflictingAlias {
    
    const filterSensitiveLog: (obj: ConflictingAlias) => any;
}

export interface ConflictingAliasesList {
    
    NextMarker?: string;
    
    MaxItems?: number;
    
    Quantity?: number;
    
    Items?: ConflictingAlias[];
}
export declare namespace ConflictingAliasesList {
    
    const filterSensitiveLog: (obj: ConflictingAliasesList) => any;
}
export interface ListConflictingAliasesResult {
    
    ConflictingAliasesList?: ConflictingAliasesList;
}
export declare namespace ListConflictingAliasesResult {
    
    const filterSensitiveLog: (obj: ListConflictingAliasesResult) => any;
}

export interface ListDistributionsRequest {
    
    Marker?: string;
    
    MaxItems?: number;
}
export declare namespace ListDistributionsRequest {
    
    const filterSensitiveLog: (obj: ListDistributionsRequest) => any;
}

export interface DistributionSummary {
    
    Id: string | undefined;
    
    ARN: string | undefined;
    
    Status: string | undefined;
    
    LastModifiedTime: Date | undefined;
    
    DomainName: string | undefined;
    
    Aliases: Aliases | undefined;
    
    Origins: Origins | undefined;
    
    OriginGroups?: OriginGroups;
    
    DefaultCacheBehavior: DefaultCacheBehavior | undefined;
    
    CacheBehaviors: CacheBehaviors | undefined;
    
    CustomErrorResponses: CustomErrorResponses | undefined;
    
    Comment: string | undefined;
    
    PriceClass: PriceClass | string | undefined;
    
    Enabled: boolean | undefined;
    
    ViewerCertificate: ViewerCertificate | undefined;
    
    Restrictions: Restrictions | undefined;
    
    WebACLId: string | undefined;
    
    HttpVersion: HttpVersion | string | undefined;
    
    IsIPV6Enabled: boolean | undefined;
    
    AliasICPRecordals?: AliasICPRecordal[];
}
export declare namespace DistributionSummary {
    
    const filterSensitiveLog: (obj: DistributionSummary) => any;
}

export interface DistributionList {
    
    Marker: string | undefined;
    
    NextMarker?: string;
    
    MaxItems: number | undefined;
    
    IsTruncated: boolean | undefined;
    
    Quantity: number | undefined;
    
    Items?: DistributionSummary[];
}
export declare namespace DistributionList {
    
    const filterSensitiveLog: (obj: DistributionList) => any;
}

export interface ListDistributionsResult {
    
    DistributionList?: DistributionList;
}
export declare namespace ListDistributionsResult {
    
    const filterSensitiveLog: (obj: ListDistributionsResult) => any;
}
export interface ListDistributionsByCachePolicyIdRequest {
    
    Marker?: string;
    
    MaxItems?: number;
    
    CachePolicyId: string | undefined;
}
export declare namespace ListDistributionsByCachePolicyIdRequest {
    
    const filterSensitiveLog: (obj: ListDistributionsByCachePolicyIdRequest) => any;
}

export interface DistributionIdList {
    
    Marker: string | undefined;
    
    NextMarker?: string;
    
    MaxItems: number | undefined;
    
    IsTruncated: boolean | undefined;
    
    Quantity: number | undefined;
    
    Items?: string[];
}
export declare namespace DistributionIdList {
    
    const filterSensitiveLog: (obj: DistributionIdList) => any;
}
export interface ListDistributionsByCachePolicyIdResult {
    
    DistributionIdList?: DistributionIdList;
}
export declare namespace ListDistributionsByCachePolicyIdResult {
    
    const filterSensitiveLog: (obj: ListDistributionsByCachePolicyIdResult) => any;
}
export interface ListDistributionsByKeyGroupRequest {
    
    Marker?: string;
    
    MaxItems?: number;
    
    KeyGroupId: string | undefined;
}
export declare namespace ListDistributionsByKeyGroupRequest {
    
    const filterSensitiveLog: (obj: ListDistributionsByKeyGroupRequest) => any;
}
export interface ListDistributionsByKeyGroupResult {
    
    DistributionIdList?: DistributionIdList;
}
export declare namespace ListDistributionsByKeyGroupResult {
    
    const filterSensitiveLog: (obj: ListDistributionsByKeyGroupResult) => any;
}
export interface ListDistributionsByOriginRequestPolicyIdRequest {
    
    Marker?: string;
    
    MaxItems?: number;
    
    OriginRequestPolicyId: string | undefined;
}
export declare namespace ListDistributionsByOriginRequestPolicyIdRequest {
    
    const filterSensitiveLog: (obj: ListDistributionsByOriginRequestPolicyIdRequest) => any;
}
export interface ListDistributionsByOriginRequestPolicyIdResult {
    
    DistributionIdList?: DistributionIdList;
}
export declare namespace ListDistributionsByOriginRequestPolicyIdResult {
    
    const filterSensitiveLog: (obj: ListDistributionsByOriginRequestPolicyIdResult) => any;
}
export interface ListDistributionsByRealtimeLogConfigRequest {
    
    Marker?: string;
    
    MaxItems?: number;
    
    RealtimeLogConfigName?: string;
    
    RealtimeLogConfigArn?: string;
}
export declare namespace ListDistributionsByRealtimeLogConfigRequest {
    
    const filterSensitiveLog: (obj: ListDistributionsByRealtimeLogConfigRequest) => any;
}
export interface ListDistributionsByRealtimeLogConfigResult {
    
    DistributionList?: DistributionList;
}
export declare namespace ListDistributionsByRealtimeLogConfigResult {
    
    const filterSensitiveLog: (obj: ListDistributionsByRealtimeLogConfigResult) => any;
}
export interface ListDistributionsByResponseHeadersPolicyIdRequest {
    
    Marker?: string;
    
    MaxItems?: number;
    
    ResponseHeadersPolicyId: string | undefined;
}
export declare namespace ListDistributionsByResponseHeadersPolicyIdRequest {
    
    const filterSensitiveLog: (obj: ListDistributionsByResponseHeadersPolicyIdRequest) => any;
}
export interface ListDistributionsByResponseHeadersPolicyIdResult {
    
    DistributionIdList?: DistributionIdList;
}
export declare namespace ListDistributionsByResponseHeadersPolicyIdResult {
    
    const filterSensitiveLog: (obj: ListDistributionsByResponseHeadersPolicyIdResult) => any;
}

export interface ListDistributionsByWebACLIdRequest {
    
    Marker?: string;
    
    MaxItems?: number;
    
    WebACLId: string | undefined;
}
export declare namespace ListDistributionsByWebACLIdRequest {
    
    const filterSensitiveLog: (obj: ListDistributionsByWebACLIdRequest) => any;
}

export interface ListDistributionsByWebACLIdResult {
    
    DistributionList?: DistributionList;
}
export declare namespace ListDistributionsByWebACLIdResult {
    
    const filterSensitiveLog: (obj: ListDistributionsByWebACLIdResult) => any;
}
export interface ListFieldLevelEncryptionConfigsRequest {
    
    Marker?: string;
    
    MaxItems?: number;
}
export declare namespace ListFieldLevelEncryptionConfigsRequest {
    
    const filterSensitiveLog: (obj: ListFieldLevelEncryptionConfigsRequest) => any;
}

export interface FieldLevelEncryptionSummary {
    
    Id: string | undefined;
    
    LastModifiedTime: Date | undefined;
    
    Comment?: string;
    
    QueryArgProfileConfig?: QueryArgProfileConfig;
    
    ContentTypeProfileConfig?: ContentTypeProfileConfig;
}
export declare namespace FieldLevelEncryptionSummary {
    
    const filterSensitiveLog: (obj: FieldLevelEncryptionSummary) => any;
}

export interface FieldLevelEncryptionList {
    
    NextMarker?: string;
    
    MaxItems: number | undefined;
    
    Quantity: number | undefined;
    
    Items?: FieldLevelEncryptionSummary[];
}
export declare namespace FieldLevelEncryptionList {
    
    const filterSensitiveLog: (obj: FieldLevelEncryptionList) => any;
}
export interface ListFieldLevelEncryptionConfigsResult {
    
    FieldLevelEncryptionList?: FieldLevelEncryptionList;
}
export declare namespace ListFieldLevelEncryptionConfigsResult {
    
    const filterSensitiveLog: (obj: ListFieldLevelEncryptionConfigsResult) => any;
}
export interface ListFieldLevelEncryptionProfilesRequest {
    
    Marker?: string;
    
    MaxItems?: number;
}
export declare namespace ListFieldLevelEncryptionProfilesRequest {
    
    const filterSensitiveLog: (obj: ListFieldLevelEncryptionProfilesRequest) => any;
}

export interface FieldLevelEncryptionProfileSummary {
    
    Id: string | undefined;
    
    LastModifiedTime: Date | undefined;
    
    Name: string | undefined;
    
    EncryptionEntities: EncryptionEntities | undefined;
    
    Comment?: string;
}
export declare namespace FieldLevelEncryptionProfileSummary {
    
    const filterSensitiveLog: (obj: FieldLevelEncryptionProfileSummary) => any;
}

export interface FieldLevelEncryptionProfileList {
    
    NextMarker?: string;
    
    MaxItems: number | undefined;
    
    Quantity: number | undefined;
    
    Items?: FieldLevelEncryptionProfileSummary[];
}
export declare namespace FieldLevelEncryptionProfileList {
    
    const filterSensitiveLog: (obj: FieldLevelEncryptionProfileList) => any;
}
export interface ListFieldLevelEncryptionProfilesResult {
    
    FieldLevelEncryptionProfileList?: FieldLevelEncryptionProfileList;
}
export declare namespace ListFieldLevelEncryptionProfilesResult {
    
    const filterSensitiveLog: (obj: ListFieldLevelEncryptionProfilesResult) => any;
}
export interface ListFunctionsRequest {
    
    Marker?: string;
    
    MaxItems?: number;
    
    Stage?: FunctionStage | string;
}
export declare namespace ListFunctionsRequest {
    
    const filterSensitiveLog: (obj: ListFunctionsRequest) => any;
}

export interface FunctionList {
    
    NextMarker?: string;
    
    MaxItems: number | undefined;
    
    Quantity: number | undefined;
    
    Items?: FunctionSummary[];
}
export declare namespace FunctionList {
    
    const filterSensitiveLog: (obj: FunctionList) => any;
}
export interface ListFunctionsResult {
    
    FunctionList?: FunctionList;
}
export declare namespace ListFunctionsResult {
    
    const filterSensitiveLog: (obj: ListFunctionsResult) => any;
}

export interface ListInvalidationsRequest {
    
    DistributionId: string | undefined;
    
    Marker?: string;
    
    MaxItems?: number;
}
export declare namespace ListInvalidationsRequest {
    
    const filterSensitiveLog: (obj: ListInvalidationsRequest) => any;
}

export interface InvalidationSummary {
    
    Id: string | undefined;
    
    CreateTime: Date | undefined;
    
    Status: string | undefined;
}
export declare namespace InvalidationSummary {
    
    const filterSensitiveLog: (obj: InvalidationSummary) => any;
}

export interface InvalidationList {
    
    Marker: string | undefined;
    
    NextMarker?: string;
    
    MaxItems: number | undefined;
    
    IsTruncated: boolean | undefined;
    
    Quantity: number | undefined;
    
    Items?: InvalidationSummary[];
}
export declare namespace InvalidationList {
    
    const filterSensitiveLog: (obj: InvalidationList) => any;
}

export interface ListInvalidationsResult {
    
    InvalidationList?: InvalidationList;
}
export declare namespace ListInvalidationsResult {
    
    const filterSensitiveLog: (obj: ListInvalidationsResult) => any;
}
export interface ListKeyGroupsRequest {
    
    Marker?: string;
    
    MaxItems?: number;
}
export declare namespace ListKeyGroupsRequest {
    
    const filterSensitiveLog: (obj: ListKeyGroupsRequest) => any;
}

export interface KeyGroupSummary {
    
    KeyGroup: KeyGroup | undefined;
}
export declare namespace KeyGroupSummary {
    
    const filterSensitiveLog: (obj: KeyGroupSummary) => any;
}

export interface KeyGroupList {
    
    NextMarker?: string;
    
    MaxItems: number | undefined;
    
    Quantity: number | undefined;
    
    Items?: KeyGroupSummary[];
}
export declare namespace KeyGroupList {
    
    const filterSensitiveLog: (obj: KeyGroupList) => any;
}
export interface ListKeyGroupsResult {
    
    KeyGroupList?: KeyGroupList;
}
export declare namespace ListKeyGroupsResult {
    
    const filterSensitiveLog: (obj: ListKeyGroupsResult) => any;
}
export declare type OriginRequestPolicyType = "custom" | "managed";
export interface ListOriginRequestPoliciesRequest {
    
    Type?: OriginRequestPolicyType | string;
    
    Marker?: string;
    
    MaxItems?: number;
}
export declare namespace ListOriginRequestPoliciesRequest {
    
    const filterSensitiveLog: (obj: ListOriginRequestPoliciesRequest) => any;
}

export interface OriginRequestPolicySummary {
    
    Type: OriginRequestPolicyType | string | undefined;
    
    OriginRequestPolicy: OriginRequestPolicy | undefined;
}
export declare namespace OriginRequestPolicySummary {
    
    const filterSensitiveLog: (obj: OriginRequestPolicySummary) => any;
}

export interface OriginRequestPolicyList {
    
    NextMarker?: string;
    
    MaxItems: number | undefined;
    
    Quantity: number | undefined;
    
    Items?: OriginRequestPolicySummary[];
}
export declare namespace OriginRequestPolicyList {
    
    const filterSensitiveLog: (obj: OriginRequestPolicyList) => any;
}
export interface ListOriginRequestPoliciesResult {
    
    OriginRequestPolicyList?: OriginRequestPolicyList;
}
export declare namespace ListOriginRequestPoliciesResult {
    
    const filterSensitiveLog: (obj: ListOriginRequestPoliciesResult) => any;
}
export interface ListPublicKeysRequest {
    
    Marker?: string;
    
    MaxItems?: number;
}
export declare namespace ListPublicKeysRequest {
    
    const filterSensitiveLog: (obj: ListPublicKeysRequest) => any;
}

export interface PublicKeySummary {
    
    Id: string | undefined;
    
    Name: string | undefined;
    
    CreatedTime: Date | undefined;
    
    EncodedKey: string | undefined;
    
    Comment?: string;
}
export declare namespace PublicKeySummary {
    
    const filterSensitiveLog: (obj: PublicKeySummary) => any;
}

export interface PublicKeyList {
    
    NextMarker?: string;
    
    MaxItems: number | undefined;
    
    Quantity: number | undefined;
    
    Items?: PublicKeySummary[];
}
export declare namespace PublicKeyList {
    
    const filterSensitiveLog: (obj: PublicKeyList) => any;
}
export interface ListPublicKeysResult {
    
    PublicKeyList?: PublicKeyList;
}
export declare namespace ListPublicKeysResult {
    
    const filterSensitiveLog: (obj: ListPublicKeysResult) => any;
}
export interface ListRealtimeLogConfigsRequest {
    
    MaxItems?: number;
    
    Marker?: string;
}
export declare namespace ListRealtimeLogConfigsRequest {
    
    const filterSensitiveLog: (obj: ListRealtimeLogConfigsRequest) => any;
}

export interface RealtimeLogConfigs {
    
    MaxItems: number | undefined;
    
    Items?: RealtimeLogConfig[];
    
    IsTruncated: boolean | undefined;
    
    Marker: string | undefined;
    
    NextMarker?: string;
}
export declare namespace RealtimeLogConfigs {
    
    const filterSensitiveLog: (obj: RealtimeLogConfigs) => any;
}
export interface ListRealtimeLogConfigsResult {
    
    RealtimeLogConfigs?: RealtimeLogConfigs;
}
export declare namespace ListRealtimeLogConfigsResult {
    
    const filterSensitiveLog: (obj: ListRealtimeLogConfigsResult) => any;
}
export declare enum ResponseHeadersPolicyType {
    custom = "custom",
    managed = "managed"
}
export interface ListResponseHeadersPoliciesRequest {
    
    Type?: ResponseHeadersPolicyType | string;
    
    Marker?: string;
    
    MaxItems?: number;
}
export declare namespace ListResponseHeadersPoliciesRequest {
    
    const filterSensitiveLog: (obj: ListResponseHeadersPoliciesRequest) => any;
}

export interface ResponseHeadersPolicySummary {
    
    Type: ResponseHeadersPolicyType | string | undefined;
    
    ResponseHeadersPolicy: ResponseHeadersPolicy | undefined;
}
export declare namespace ResponseHeadersPolicySummary {
    
    const filterSensitiveLog: (obj: ResponseHeadersPolicySummary) => any;
}

export interface ResponseHeadersPolicyList {
    
    NextMarker?: string;
    
    MaxItems: number | undefined;
    
    Quantity: number | undefined;
    
    Items?: ResponseHeadersPolicySummary[];
}
export declare namespace ResponseHeadersPolicyList {
    
    const filterSensitiveLog: (obj: ResponseHeadersPolicyList) => any;
}
export interface ListResponseHeadersPoliciesResult {
    
    ResponseHeadersPolicyList?: ResponseHeadersPolicyList;
}
export declare namespace ListResponseHeadersPoliciesResult {
    
    const filterSensitiveLog: (obj: ListResponseHeadersPoliciesResult) => any;
}

export interface ListStreamingDistributionsRequest {
    
    Marker?: string;
    
    MaxItems?: number;
}
export declare namespace ListStreamingDistributionsRequest {
    
    const filterSensitiveLog: (obj: ListStreamingDistributionsRequest) => any;
}

export interface StreamingDistributionSummary {
    
    Id: string | undefined;
    
    ARN: string | undefined;
    
    Status: string | undefined;
    
    LastModifiedTime: Date | undefined;
    
    DomainName: string | undefined;
    
    S3Origin: S3Origin | undefined;
    
    Aliases: Aliases | undefined;
    
    TrustedSigners: TrustedSigners | undefined;
    
    Comment: string | undefined;
    
    PriceClass: PriceClass | string | undefined;
    
    Enabled: boolean | undefined;
}
export declare namespace StreamingDistributionSummary {
    
    const filterSensitiveLog: (obj: StreamingDistributionSummary) => any;
}

export interface StreamingDistributionList {
    
    Marker: string | undefined;
    
    NextMarker?: string;
    
    MaxItems: number | undefined;
    
    IsTruncated: boolean | undefined;
    
    Quantity: number | undefined;
    
    Items?: StreamingDistributionSummary[];
}
export declare namespace StreamingDistributionList {
    
    const filterSensitiveLog: (obj: StreamingDistributionList) => any;
}

export interface ListStreamingDistributionsResult {
    
    StreamingDistributionList?: StreamingDistributionList;
}
export declare namespace ListStreamingDistributionsResult {
    
    const filterSensitiveLog: (obj: ListStreamingDistributionsResult) => any;
}

export interface ListTagsForResourceRequest {
    
    Resource: string | undefined;
}
export declare namespace ListTagsForResourceRequest {
    
    const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
}

export interface ListTagsForResourceResult {
    
    Tags: Tags | undefined;
}
export declare namespace ListTagsForResourceResult {
    
    const filterSensitiveLog: (obj: ListTagsForResourceResult) => any;
}
export interface PublishFunctionRequest {
    
    Name: string | undefined;
    
    IfMatch: string | undefined;
}
export declare namespace PublishFunctionRequest {
    
    const filterSensitiveLog: (obj: PublishFunctionRequest) => any;
}
export interface PublishFunctionResult {
    
    FunctionSummary?: FunctionSummary;
}
export declare namespace PublishFunctionResult {
    
    const filterSensitiveLog: (obj: PublishFunctionResult) => any;
}

export interface TagResourceRequest {
    
    Resource: string | undefined;
    
    Tags: Tags | undefined;
}
export declare namespace TagResourceRequest {
    
    const filterSensitiveLog: (obj: TagResourceRequest) => any;
}

export declare class TestFunctionFailed extends __BaseException {
    readonly name: "TestFunctionFailed";
    readonly $fault: "server";
    Message?: string;
    
    constructor(opts: __ExceptionOptionType<TestFunctionFailed, __BaseException>);
}
export interface TestFunctionRequest {
    
    Name: string | undefined;
    
    IfMatch: string | undefined;
    
    Stage?: FunctionStage | string;
    
    EventObject: Uint8Array | undefined;
}
export declare namespace TestFunctionRequest {
    
    const filterSensitiveLog: (obj: TestFunctionRequest) => any;
}

export interface TestResult {
    
    FunctionSummary?: FunctionSummary;
    
    ComputeUtilization?: string;
    
    FunctionExecutionLogs?: string[];
    
    FunctionErrorMessage?: string;
    
    FunctionOutput?: string;
}
export declare namespace TestResult {
    
    const filterSensitiveLog: (obj: TestResult) => any;
}
export interface TestFunctionResult {
    
    TestResult?: TestResult;
}
export declare namespace TestFunctionResult {
    
    const filterSensitiveLog: (obj: TestFunctionResult) => any;
}

export interface TagKeys {
    
    Items?: string[];
}
export declare namespace TagKeys {
    
    const filterSensitiveLog: (obj: TagKeys) => any;
}

export interface UntagResourceRequest {
    
    Resource: string | undefined;
    
    TagKeys: TagKeys | undefined;
}
export declare namespace UntagResourceRequest {
    
    const filterSensitiveLog: (obj: UntagResourceRequest) => any;
}
export interface UpdateCachePolicyRequest {
    
    CachePolicyConfig: CachePolicyConfig | undefined;
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace UpdateCachePolicyRequest {
    
    const filterSensitiveLog: (obj: UpdateCachePolicyRequest) => any;
}
export interface UpdateCachePolicyResult {
    
    CachePolicy?: CachePolicy;
    
    ETag?: string;
}
export declare namespace UpdateCachePolicyResult {
    
    const filterSensitiveLog: (obj: UpdateCachePolicyResult) => any;
}

export interface UpdateCloudFrontOriginAccessIdentityRequest {
    
    CloudFrontOriginAccessIdentityConfig: CloudFrontOriginAccessIdentityConfig | undefined;
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace UpdateCloudFrontOriginAccessIdentityRequest {
    
    const filterSensitiveLog: (obj: UpdateCloudFrontOriginAccessIdentityRequest) => any;
}

export interface UpdateCloudFrontOriginAccessIdentityResult {
    
    CloudFrontOriginAccessIdentity?: CloudFrontOriginAccessIdentity;
    
    ETag?: string;
}
export declare namespace UpdateCloudFrontOriginAccessIdentityResult {
    
    const filterSensitiveLog: (obj: UpdateCloudFrontOriginAccessIdentityResult) => any;
}

export interface UpdateDistributionRequest {
    
    DistributionConfig: DistributionConfig | undefined;
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace UpdateDistributionRequest {
    
    const filterSensitiveLog: (obj: UpdateDistributionRequest) => any;
}

export interface UpdateDistributionResult {
    
    Distribution?: Distribution;
    
    ETag?: string;
}
export declare namespace UpdateDistributionResult {
    
    const filterSensitiveLog: (obj: UpdateDistributionResult) => any;
}
export interface UpdateFieldLevelEncryptionConfigRequest {
    
    FieldLevelEncryptionConfig: FieldLevelEncryptionConfig | undefined;
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace UpdateFieldLevelEncryptionConfigRequest {
    
    const filterSensitiveLog: (obj: UpdateFieldLevelEncryptionConfigRequest) => any;
}
export interface UpdateFieldLevelEncryptionConfigResult {
    
    FieldLevelEncryption?: FieldLevelEncryption;
    
    ETag?: string;
}
export declare namespace UpdateFieldLevelEncryptionConfigResult {
    
    const filterSensitiveLog: (obj: UpdateFieldLevelEncryptionConfigResult) => any;
}
export interface UpdateFieldLevelEncryptionProfileRequest {
    
    FieldLevelEncryptionProfileConfig: FieldLevelEncryptionProfileConfig | undefined;
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace UpdateFieldLevelEncryptionProfileRequest {
    
    const filterSensitiveLog: (obj: UpdateFieldLevelEncryptionProfileRequest) => any;
}
export interface UpdateFieldLevelEncryptionProfileResult {
    
    FieldLevelEncryptionProfile?: FieldLevelEncryptionProfile;
    
    ETag?: string;
}
export declare namespace UpdateFieldLevelEncryptionProfileResult {
    
    const filterSensitiveLog: (obj: UpdateFieldLevelEncryptionProfileResult) => any;
}
export interface UpdateFunctionRequest {
    
    Name: string | undefined;
    
    IfMatch: string | undefined;
    
    FunctionConfig: FunctionConfig | undefined;
    
    FunctionCode: Uint8Array | undefined;
}
export declare namespace UpdateFunctionRequest {
    
    const filterSensitiveLog: (obj: UpdateFunctionRequest) => any;
}
export interface UpdateFunctionResult {
    
    FunctionSummary?: FunctionSummary;
    
    ETag?: string;
}
export declare namespace UpdateFunctionResult {
    
    const filterSensitiveLog: (obj: UpdateFunctionResult) => any;
}
export interface UpdateKeyGroupRequest {
    
    KeyGroupConfig: KeyGroupConfig | undefined;
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace UpdateKeyGroupRequest {
    
    const filterSensitiveLog: (obj: UpdateKeyGroupRequest) => any;
}
export interface UpdateKeyGroupResult {
    
    KeyGroup?: KeyGroup;
    
    ETag?: string;
}
export declare namespace UpdateKeyGroupResult {
    
    const filterSensitiveLog: (obj: UpdateKeyGroupResult) => any;
}
export interface UpdateOriginRequestPolicyRequest {
    
    OriginRequestPolicyConfig: OriginRequestPolicyConfig | undefined;
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace UpdateOriginRequestPolicyRequest {
    
    const filterSensitiveLog: (obj: UpdateOriginRequestPolicyRequest) => any;
}
export interface UpdateOriginRequestPolicyResult {
    
    OriginRequestPolicy?: OriginRequestPolicy;
    
    ETag?: string;
}
export declare namespace UpdateOriginRequestPolicyResult {
    
    const filterSensitiveLog: (obj: UpdateOriginRequestPolicyResult) => any;
}
export interface UpdatePublicKeyRequest {
    
    PublicKeyConfig: PublicKeyConfig | undefined;
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace UpdatePublicKeyRequest {
    
    const filterSensitiveLog: (obj: UpdatePublicKeyRequest) => any;
}
export interface UpdatePublicKeyResult {
    
    PublicKey?: PublicKey;
    
    ETag?: string;
}
export declare namespace UpdatePublicKeyResult {
    
    const filterSensitiveLog: (obj: UpdatePublicKeyResult) => any;
}
export interface UpdateRealtimeLogConfigRequest {
    
    EndPoints?: EndPoint[];
    
    Fields?: string[];
    
    Name?: string;
    
    ARN?: string;
    
    SamplingRate?: number;
}
export declare namespace UpdateRealtimeLogConfigRequest {
    
    const filterSensitiveLog: (obj: UpdateRealtimeLogConfigRequest) => any;
}
export interface UpdateRealtimeLogConfigResult {
    
    RealtimeLogConfig?: RealtimeLogConfig;
}
export declare namespace UpdateRealtimeLogConfigResult {
    
    const filterSensitiveLog: (obj: UpdateRealtimeLogConfigResult) => any;
}
export interface UpdateResponseHeadersPolicyRequest {
    
    ResponseHeadersPolicyConfig: ResponseHeadersPolicyConfig | undefined;
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace UpdateResponseHeadersPolicyRequest {
    
    const filterSensitiveLog: (obj: UpdateResponseHeadersPolicyRequest) => any;
}
export interface UpdateResponseHeadersPolicyResult {
    
    ResponseHeadersPolicy?: ResponseHeadersPolicy;
    
    ETag?: string;
}
export declare namespace UpdateResponseHeadersPolicyResult {
    
    const filterSensitiveLog: (obj: UpdateResponseHeadersPolicyResult) => any;
}

export interface UpdateStreamingDistributionRequest {
    
    StreamingDistributionConfig: StreamingDistributionConfig | undefined;
    
    Id: string | undefined;
    
    IfMatch?: string;
}
export declare namespace UpdateStreamingDistributionRequest {
    
    const filterSensitiveLog: (obj: UpdateStreamingDistributionRequest) => any;
}

export interface UpdateStreamingDistributionResult {
    
    StreamingDistribution?: StreamingDistribution;
    
    ETag?: string;
}
export declare namespace UpdateStreamingDistributionResult {
    
    const filterSensitiveLog: (obj: UpdateStreamingDistributionResult) => any;
}
